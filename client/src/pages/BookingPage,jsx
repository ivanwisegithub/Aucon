// import React, { useState, useEffect } from 'react';
// import { Alert, Button, Label, Select, TextInput, Textarea, Spinner } from 'flowbite-react';
// import { useSelector, useDispatch } from 'react-redux';
// import { useNavigate } from 'react-router-dom';
// import { clearError } from '../redux/user/userSlice';

// export default function BookingForm() {
//   const { currentUser } = useSelector((state) => state.user);
//   const dispatch = useDispatch();
//   const navigate = useNavigate();
  
//   const [formData, setFormData] = useState({
//     appointmentType: '',
//     preferredDate: '',
//     preferredTime: '',
//     additionalNotes: ''
//   });
//   const [loading, setLoading] = useState(false);
//   const [message, setMessage] = useState({ type: '', content: '' });

//   useEffect(() => {
//     // Check if user is authenticated
//     if (!currentUser) {
//       navigate('/sign-in');
//       return;
//     }
    
//     // Clear any previous errors
//     dispatch(clearError());
//   }, [currentUser, navigate, dispatch]);

//   // Enhanced token retrieval with multiple fallbacks
//   const getAuthToken = () => {
//     // Try Redux state first (most reliable)
//     if (currentUser?.accessToken) {
//       return currentUser.accessToken;
//     }

//     // Try localStorage
//     let token = localStorage.getItem('access_token');
    
//     // Fallback to cookies
//     if (!token) {
//       try {
//         const cookies = document.cookie.split(';');
//         for (let cookie of cookies) {
//           const [name, value] = cookie.trim().split('=');
//           if (name === 'access_token') {
//             token = value;
//             break;
//           }
//         }
//       } catch (error) {
//         console.warn('Could not access cookies:', error);
//       }
//     }
    
//     return token;
//   };

//   // Enhanced authenticated fetch function
//   const authenticatedFetch = async (url, options = {}) => {
//     const token = getAuthToken();
    
//     if (!token) {
//       throw new Error('Authentication token not found. Please login again.');
//     }

//     const defaultHeaders = {
//       'Content-Type': 'application/json',
//       'Authorization': `Bearer ${token}`,
//       'x-access-token': token // Additional header for compatibility
//     };

//     const config = {
//       ...options,
//       headers: {
//         ...defaultHeaders,
//         ...options.headers,
//       },
//     };

//     const response = await fetch(url, config);
    
//     // Handle authentication errors
//     if (response.status === 401 || response.status === 403) {
//       throw new Error('Authentication token not found. Please login again.');
//     }
    
//     if (!response.ok) {
//       const errorData = await response.json().catch(() => ({}));
//       throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
//     }
    
//     return response;
//   };

//   const handleInputChange = (e) => {
//     const { name, value } = e.target;
//     setFormData(prev => ({
//       ...prev,
//       [name]: value
//     }));
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setLoading(true);
//     setMessage({ type: '', content: '' });

//     try {
//       // Validate required fields
//       if (!formData.appointmentType || !formData.preferredDate || !formData.preferredTime) {
//         setMessage({ 
//           type: 'error', 
//           content: 'Please fill in all required fields.' 
//         });
//         setLoading(false);
//         return;
//       }

//       // Validate date is not in the past
//       const selectedDate = new Date(formData.preferredDate);
//       const today = new Date();
//       today.setHours(0, 0, 0, 0);
      
//       if (selectedDate < today) {
//         setMessage({ 
//           type: 'error', 
//           content: 'Please select a future date.' 
//         });
//         setLoading(false);
//         return;
//       }

//       // Prepare booking data
//       const bookingData = {
//         studentId: currentUser._id,
//         studentName: currentUser.username,
//         studentEmail: currentUser.email,
//         fullName: currentUser.username,
//         email: currentUser.email,
//         appointmentType: formData.appointmentType,
//         preferredDate: formData.preferredDate,
//         preferredTime: formData.preferredTime,
//         additionalNotes: formData.additionalNotes
//       };

//       // Try both API endpoints for compatibility
//       let response;
//       try {
//         // Try new endpoint first
//         response = await authenticatedFetch('/api/booking/create', {
//           method: 'POST',
//           body: JSON.stringify(bookingData),
//         });
//       } catch (error) {
//         // Fallback to original endpoint
//         console.log('Trying fallback endpoint...');
//         response = await authenticatedFetch('/api/bookings', {
//           method: 'POST',
//           body: JSON.stringify(bookingData),
//         });
//       }

//       const data = await response.json();

//       // Success
//       setMessage({ 
//         type: 'success', 
//         content: 'Booking submitted successfully! You will receive a confirmation email shortly.' 
//       });
      
//       // Reset form
//       setFormData({
//         appointmentType: '',
//         preferredDate: '',
//         preferredTime: '',
//         additionalNotes: ''
//       });

//       // Optional: Redirect to bookings after success
//       setTimeout(() => {
//         if (window.location.pathname.includes('dashboard')) {
//           navigate('/dashboard?tab=bookings');
//         }
//       }, 2000);

//     } catch (error) {
//       console.error('Booking submission error:', error);
      
//       // Handle specific error cases
//       if (error.message.includes('Authentication token not found') || 
//           error.message.includes('401') || 
//           error.message.includes('403')) {
        
//         setMessage({ 
//           type: 'error', 
//           content: 'Please login again to book an appointment.' 
//         });
        
//         // Clear error and redirect to login
//         dispatch(clearError());
//         setTimeout(() => {
//           navigate('/sign-in');
//         }, 2000);
//       } else {
//         setMessage({ 
//           type: 'error', 
//           content: error.message || 'Failed to submit booking. Please try again.' 
//         });
//       }
//     } finally {
//       setLoading(false);
//     }
//   };

//   // Early return if not authenticated
//   if (!currentUser) {
//     return (
//       <div className="flex justify-center items-center min-h-screen">
//         <div className="text-center">
//           <p className="text-gray-600 dark:text-gray-400 mb-4">Please login to book an appointment</p>
//           <Button onClick={() => navigate('/sign-in')}>
//             Go to Login
//           </Button>
//         </div>
//       </div>
//     );
//   }

//   // Get minimum date (today)
//   const getMinDate = () => {
//     const today = new Date();
//     return today.toISOString().split('T')[0];
//   };

//   // Get time slots
//   const timeSlots = [
//     '09:00', '09:30', '10:00', '10:30', '11:00', '11:30',
//     '12:00', '12:30', '13:00', '13:30', '14:00', '14:30',
//     '15:00', '15:30', '16:00', '16:30', '17:00'
//   ];

//   const appointmentTypes = [
//     'Mental Health Support',
//     'Academic Counseling', 
//     'Career Guidance',
//     'Health Check-up',
//     'Nutrition Consultation',
//     'Stress Management',
//     'Medical Consultation',
//     'Other'
//   ];

//   return (
//     <div className='max-w-2xl mx-auto p-6'>
//       <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>
//         <h2 className='text-2xl font-bold text-gray-900 dark:text-white mb-6 text-center'>
//           Book a Wellness Appointment
//         </h2>
//         <p className='text-gray-600 dark:text-gray-400 text-center mb-8'>
//           Schedule your counseling or medical appointment with our wellness team
//         </p>

//         {message.content && (
//           <Alert 
//             color={message.type === 'success' ? 'success' : 'failure'}
//             className='mb-6'
//           >
//             {message.content}
//           </Alert>
//         )}

//         <form onSubmit={handleSubmit} className='space-y-6'>
//           {/* Pre-filled user information */}
//           <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
//             <div>
//               <Label htmlFor='studentName' value='Full Name' />
//               <TextInput
//                 id='studentName'
//                 value={currentUser?.username || ''}
//                 disabled
//                 className='bg-gray-100 dark:bg-gray-700'
//               />
//             </div>
//             <div>
//               <Label htmlFor='studentEmail' value='Email Address' />
//               <TextInput
//                 id='studentEmail'
//                 value={currentUser?.email || ''}
//                 disabled
//                 className='bg-gray-100 dark:bg-gray-700'
//               />
//             </div>
//           </div>

//           {/* Appointment Type */}
//           <div>
//             <Label htmlFor='appointmentType' value='Appointment Type *' />
//             <Select
//               id='appointmentType'
//               name='appointmentType'
//               value={formData.appointmentType}
//               onChange={handleInputChange}
//               required
//             >
//               <option value=''>Select appointment type</option>
//               {appointmentTypes.map((type) => (
//                 <option key={type} value={type}>
//                   {type}
//                 </option>
//               ))}
//             </Select>
//           </div>

//           {/* Date and Time */}
//           <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
//             <div>
//               <Label htmlFor='preferredDate' value='Preferred Date *' />
//               <TextInput
//                 id='preferredDate'
//                 name='preferredDate'
//                 type='date'
//                 value={formData.preferredDate}
//                 onChange={handleInputChange}
//                 min={getMinDate()}
//                 required
//               />
//             </div>
//             <div>
//               <Label htmlFor='preferredTime' value='Preferred Time *' />
//               <Select
//                 id='preferredTime'
//                 name='preferredTime'
//                 value={formData.preferredTime}
//                 onChange={handleInputChange}
//                 required
//               >
//                 <option value=''>Select time slot</option>
//                 {timeSlots.map((time) => (
//                   <option key={time} value={time}>
//                     {time}
//                   </option>
//                 ))}
//               </Select>
//             </div>
//           </div>

//           {/* Additional Notes */}
//           <div>
//             <Label htmlFor='additionalNotes' value='Additional Notes (Optional)' />
//             <Textarea
//               id='additionalNotes'
//               name='additionalNotes'
//               value={formData.additionalNotes}
//               onChange={handleInputChange}
//               placeholder='Any additional information or special requests...'
//               rows={4}
//               maxLength={500}
//             />
//             <p className='text-sm text-gray-500 mt-1'>
//               {formData.additionalNotes.length}/500 characters
//             </p>
//           </div>

//           {/* Submit Button */}
//           <Button
//             type='submit'
//             disabled={loading}
//             className='w-full bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-300'
//           >
//             {loading ? (
//               <>
//                 <Spinner size='sm' className='mr-2' />
//                 Submitting Booking...
//               </>
//             ) : (
//               'Submit Booking Request'
//             )}
//           </Button>
//         </form>

//         <div className='mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800'>
//           <h3 className='font-semibold text-blue-900 dark:text-blue-100 mb-2'>
//             Important Information:
//           </h3>
//           <ul className='text-sm text-blue-800 dark:text-blue-200 space-y-1'>
//             <li>• Appointments are subject to availability and confirmation</li>
//             <li>• You will receive an email confirmation within 24 hours</li>
//             <li>• Please arrive 10 minutes early for your appointment</li>
//             <li>• Cancellations must be made at least 24 hours in advance</li>
//           </ul>
//         </div>
//       </div>
//     </div>
//   );
// }